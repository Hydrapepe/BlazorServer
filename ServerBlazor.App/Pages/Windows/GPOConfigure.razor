@page "/Windows/GPOConfigure"
@inject IJSRuntime JsRuntime
@attribute [Authorize]
<p>
    <label>Name Polisy: </label>
    <input @bind="@_namePolisy" />
    <label>Repressed group name: </label>
    <input @bind="@_nameGroup" />
    <label>Domain name: </label>
    <input @bind="@_domainName" />
</p>
Ban CMD
<input type="checkbox" @onchange="EventArgs1">
Ban execute(Win+R)
<input type="checkbox" @onchange="EventArgs2">
Ban registry editor
<input type="checkbox" @onchange="EventArgs3">
Ban control panels
<input type="checkbox" @onchange="EventArgs4">
Ban screen saver
<input type="checkbox" @onchange="EventArgs5">
Ban wallpaper
<input type="checkbox" @onchange="EventArgs6">
Ban on the first splash screen (Win10 mayn't be work)
<input type="checkbox" @onchange="EventArgs7">
<p>
    <button @onclick="Generate">Ban</button>
    <button @onclick="Generate_ALL">MEGA BAN</button>
</p>
@code {
    private readonly bool[] _pepe = { false, false, false, false, false, false, false };

#pragma warning disable 649
    private string _namePolisy, _nameGroup, _domainName, _serverDotSplit;
#pragma warning restore 649
    void EventArgs1()
    {
        _pepe[0] = true;
    }
    void EventArgs2()
    {
        _pepe[1] = true;
    }
    void EventArgs3()
    {
        _pepe[2] = true;
    }
    void EventArgs4()
    {
        _pepe[3] = true;
    }
    void EventArgs5()
    {
        _pepe[4] = true;
    }
    void EventArgs6()
    {
        _pepe[5] = true;
    }
    void EventArgs7()
    {
        _pepe[6] = true;
    }

    void Generate()
    {
        string[] memory = { "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Policies\\Microsoft\\Windows\\System\" -ValueName DisableCMD -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoRun -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -ValueName DisableRegistryTools -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoControlPanel -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName ScreenSaveActive -Type String -Value 0\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\" -ValueName NoChangingWallPaper -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -ValueName EnableFirstLogonAnimation  -Type DWord -Value 0\n"};
        var words = _domainName.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries);
        _serverDotSplit = words[0] = "OU=" + _nameGroup + ",DC=" + words[0];
        for (var i = 1; i != words.Length; i++)
        {
            words[i] = ",DC=" + words[i];
            _serverDotSplit += words[i];
        }

        var text = "New-GPO -Name \"" + _namePolisy + "\" | New-GPLink -Target \"" + _serverDotSplit + "\"\n";
        for (var i = 0; i != _pepe.Length; i++)
        {
            if (_pepe[i])
            {
                text += memory[i];
            }
        }
        DownloadFile("GPO.ps1", text);
    }

    void Generate_ALL()
    {
        string[] memory = { "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Policies\\Microsoft\\Windows\\System\" -ValueName DisableCMD -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoRun -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -ValueName DisableRegistryTools -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoControlPanel -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName ScreenSaveActive -Type String -Value 0\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\" -ValueName NoChangingWallPaper -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -ValueName EnableFirstLogonAnimation  -Type DWord -Value 0\n"};
        var words = _domainName.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries);
        _serverDotSplit = words[0] = "OU=" + _nameGroup + ",DC=" + words[0];
        for (var i = 1; i != words.Length; i++)
        {
            words[i] = ",DC=" + words[i];
            _serverDotSplit += words[i];
        }
        var text = "New-GPO -Name \"" + _namePolisy + "\" | New-GPLink -Target \"" + _serverDotSplit + "\"\n";
        for (var i = 0; i != _pepe.Length; i++)
        {
            text += memory[i];
        }
        DownloadFile("GPO.ps1", text);
    }

    private async void DownloadFile(string name, string content)
    {
        await JsRuntime.InvokeAsync<object>(
            "FileSaveAs",
            name,
            content
        );
    }
}
