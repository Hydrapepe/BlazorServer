@page "/Windows/GPOConfigure"
@inject IJSRuntime JsRuntime
@attribute [Authorize]


<div class="block_Main201">
    <p>Имя политики</p>
    <input @bind="@_namePolisy" />
</div>
<div class="block_Main202">
    <p>Имя репресируемой группы</p>
    <input @bind="@_nameGroup" />
</div>
<div class="block_Main203">
    <p>Доменное имя</p>
    <input @bind="@_domainName" />
</div>
<div class="block_Main204">
    <input type="checkbox" value="false" @onchange="EventArgs1"> Бан консоли
</div>
<div class="block_Main205">
    <input type="checkbox" value="false" @onchange="EventArgs2"> Бан выполнить(win+ R)
</div>
<div class="block_Main206">
    <input type="checkbox" value="false" @onchange="EventArgs3"> Бан редактора реестра
</div>
<div class="block_Main207">
    <input type="checkbox" value="false" @onchange="EventArgs4"> Бан панели управления
</div>
<div class="block_Main208">
    <input type="checkbox" value="false" @onchange="EventArgs5"> Бан экранной заставки
</div>
<div class="block_Main209">
    <input type="checkbox" value="false" @onchange="EventArgs6"> Бан бан обоев
</div>
<div class="block_Main210">
    <input type="checkbox" value="false" @onchange="EventArgs7"> Бан на первую заставку(Win10 может не робить)
</div>
<div class="block_Main220">
    <button class="btn btn-primary" @onclick="Generate">БЭН</button>
</div>
<div class="block_Main221">
    <button class="btn btn-primary" @onclick="Generate_ALL">Мега БЭН</button>
</div>








@code {
    public bool[] Pepe = new bool[7] { false, false, false, false, false, false, false };

    private string _namePolisy, _nameGroup, _domainName, _serverDotSplit;
    void EventArgs1()
    {
        Pepe[0] = true;
    }
    void EventArgs2()
    {
        Pepe[1] = true;
    }
    void EventArgs3()
    {
        Pepe[2] = true;
    }
    void EventArgs4()
    {
        Pepe[3] = true;
    }
    void EventArgs5()
    {
        Pepe[4] = true;
    }
    void EventArgs6()
    {
        Pepe[5] = true;
    }
    void EventArgs7()
    {
        Pepe[6] = true;
    }

    void Generate()
    {
        string[] memory = new string[7] { "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Policies\\Microsoft\\Windows\\System\" -ValueName DisableCMD -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoRun -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -ValueName DisableRegistryTools -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoControlPanel -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName ScreenSaveActive -Type String -Value 0\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\" -ValueName NoChangingWallPaper -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -ValueName EnableFirstLogonAnimation  -Type DWord -Value 0\n"};
        string[] words = _domainName.Split(new char[] { '.' }, StringSplitOptions.RemoveEmptyEntries);
        _serverDotSplit = words[0] = "OU=" + _nameGroup + ",DC=" + words[0];
        for (int i = 1; i != words.Length; i++)
        {
            words[i] = ",DC=" + words[i];
            _serverDotSplit += words[i];
        }

        string text = "New-GPO -Name \"" + _namePolisy + "\" | New-GPLink -Target \"" + _serverDotSplit + "\"\n";
        for (int i = 0; i != Pepe.Length; i++)
        {
            if (Pepe[i])
            {
                text += memory[i];
            }
        }

    }


    void Generate_ALL()
    {
        string[] memory = new string[7] { "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Policies\\Microsoft\\Windows\\System\" -ValueName DisableCMD -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoRun -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" -ValueName DisableRegistryTools -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName NoControlPanel -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\" -ValueName ScreenSaveActive -Type String -Value 0\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\" -ValueName NoChangingWallPaper -Type DWord -Value 1\n",
        "Set-GPRegistryValue -Name \"" + _namePolisy + "\" -Key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" -ValueName EnableFirstLogonAnimation  -Type DWord -Value 0\n"};
        string[] words = _domainName.Split(new char[] { '.' }, StringSplitOptions.RemoveEmptyEntries);
        _serverDotSplit = words[0] = "OU=" + _nameGroup + ",DC=" + words[0];
        for (int i = 1; i != words.Length; i++)
        {
            words[i] = ",DC=" + words[i];
            _serverDotSplit += words[i];
        }
        string text = "New-GPO -Name \"" + _namePolisy + "\" | New-GPLink -Target \"" + _serverDotSplit + "\"\n";
        for (int i = 0; i != Pepe.Length; i++)
        {
            text += memory[i];
        }
        DownloadFile("GPO.ps1", text);
    }

    protected async void DownloadFile(string name, string content)
    {
        await JsRuntime.InvokeAsync<object>(
            "FileSaveAs",
            name,
            content
        );
    }
}
